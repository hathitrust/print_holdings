## From Pulintz's May 2013 Monthly

1) In general, for each new member, do the following:

2) Parse the raw data into normalized files.  See: https://docs.google.com/a/umich.edu/document/d/1-oyHUsVO-XIFenwwxRmyYba4KwrSQrdtqq44n_6Xxcg/edit#heading=h.xx4cij1wpbco. 

3) Copy the normalized files to /htapps/pulintz.babel/data/phdb/HT003/ folder.

4) Create a record for member in holdings_htmember table:  

    mysql> INSERT INTO holdings_htmember (member_id, member_name, oclc_sym, status) VALUES ("brown", "Brown University", "RBN", 1);

5) Load files into holdings_memberitem table.  E.g. do this for all three files:

   mysql>  LOAD DATA LOCAL INFILE '/htapps/pulintz.babel/data/phdb/HT003/HT003_brown.mono.tsv' INTO TABLE holdings_memberitem IGNORE 1 LINES (oclc, local_id, member_id, status, item_condition, process_date, enum_chron, item_type, issn, n_enum, n_chron);

6) Push files up to Amazon S3 (requires the s3cmd tool):

    [pulintz@koolaid-6 HT003]$ s3cmd put HT003_brown.*.tsv s3://umich-lib-phdb/input/Current/

7) Notes:  

  a) There’s a record of all the holdings_htmember insert statements in the /htapps/pulintz.babel/Code/phdb/lib/sql/insert_htmember_data.sql file.  

  b) Loading member data into holdings_memberitem can be very slow.  This is a very large table (>200M rows) that has several indexes.  A file load can take over an hour to load even if its small.  It shouldn’t take that long, and sometimes its really quick.  Haven’t figured out why it’s sometimes much faster than other times.  I’ve talked about it a couple times with Ryan, he can’t see anything weird when it seems to be crawling.

  c) When creating a new member row in the holdings_htmember table, look to see if an appropriate id already exists for the member in the ht_repository.ht_institutions table.  The convention is to use these wayf/shib ids where possible.  If there isn’t one for the new member yet, use whatever identifier is used in the main URL for their website.  E.g., since brown’s primary URL is http://www.brown.edu, we use ‘brown’.  